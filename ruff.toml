exclude = [
    ".idea",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
include = ["pyproject.toml", "src/**/*.py", "tests/**/*.py", "bin/**/*.py"]

line-length = 80
indent-width = 4

# Assume Python 3.11
target-version = "py311"

# Fix and show all errors and warnings.
fix = true
show-fixes = true

# Use preview features
preview = true

[lint]
select = [
    "UP",    # pyupgrade
    "N",     # pep8-naming
    "F",     # pyflakes
    "I",     # isort
    "C",     # pycodestyle conventions
    "E",     # pycodestyle errors
    "R",     # pycodestyle refactoring
    "W",     # pycodestyle warnings
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "ASYNC", # flake8-async
    "A",     # flake8-builtins
    "PIE",   # flake8-pie
    "T20",   # flake8-print
    "RET",   # flake8-return
    "SIM",   # flake8-simplify
    "TD",    # flake8-todo
    "T10",   # flake8-debugger
    "FA",    # flake8-future-annotations
    "ICN",   # flkae8-import-conventions
    "LOG",   # flake8-logging
    "G",     # flake8-logging-format
    "PYI",   # flake8-pyi
    "Q",     # flake8-quotes
    "RSE",   # flake8-raise
    "TID",   # flake8-tidy-imports
    "TCH",   # flake8-type-checking
    "INT",   # flake8-gettext
    "PTH",   # flake8-use-pathlib
    "PGH",   # pygrep-hooks
    "FLY",   # flynt
    "ERA",   # find commented out code
    "PERF",  # performance,
    "RUF",   # ruff specific rules
    "C90",   # mccabe complexity
    "PT",    # flake8-pytest-style
    "TRY",   # tryceratops styles
    "INP",   # flake8-no-pep420
    "FURB",  # refurb
    "DTZ",   # flake8-datetimez
]
ignore = [
    "RET504", # Unnecessary assignment before return
    "TD003",  # Missing issue link on the line following todo comment
    "TRY003", # Avoid specifying long messages outside the exception class
    "TRY004", # Prefer TypeError exception for invalid type
    "TRY300", # Consider moving this statement to an else block
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[lint.per-file-ignores]
"__init__.py" = ["F403"]
"tests/**/*.py" = ["INP", "B903"]
"bin/**/*.py" = ["INP"]

[lint.flake8-annotations]
suppress-dummy-args = true

[lint.isort]
split-on-trailing-comma = false

[format]
docstring-code-line-length = 80
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = true
line-ending = "lf"
